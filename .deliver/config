APP="phx"

#BUILD_HOST="localhost" # host where to build the release
#BUILD_USER="$USER" # local user at build host
#BUILD_AT="~/builds" # build directory on build host

#STAGING_HOSTS="localhost"
#STAGING_USER="ip82"
#DELIVER_TO="/opt/phx"

BUILD_HOST="ec2-54-175-245-49.compute-1.amazonaws.com" # deploy / production hosts separated by space
BUILD_USER="ubuntu" # local user at deploy hosts
BUILD_AT="/home/ubuntu/projects/phx_poc" # deploy directory on production hosts

STAGING_HOSTS="ec2-54-175-245-49.compute-1.amazonaws.com" # deploy / production hosts separated by space
STAGING_USER="ubuntu" # local user at deploy hosts
DELIVER_TO="/home/ubuntu" # deploy directory on production hosts

PRODUCTION_HOSTS="ec2-54-175-245-49.compute-1.amazonaws.com" # deploy / production hosts separated by space
PRODUCTION_USER="ubuntu" # local user at deploy hosts
DELIVER_TO="/home/ubuntu" # deploy directory on production hosts

pre_erlang_clean_compile() {
  status "Preparing assets with: brunch build and phoenix.digest"
  __sync_remote "
    # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile (optional)

    # fail if any command fails (recommended)
    set -e

    # enter the build directory on the build host (required)
    cd '$BUILD_AT'

    mkdir -p priv/static # required by the phoenix.digest task

    # installing npm dependencies
    npm install

    # building brunch
    brunch build --production

    # run your custom task
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
  "
}

pre_erlang_get_and_update_deps() {
  # copy it from the local machine to the build host when builing
  local _local_secret_config_file="config/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    status "Copying '$_local_secret_config_file' file to build host"
    scp "$_local_secret_config_file" "$BUILD_USER@$BUILD_HOST:$BUILD_AT/config/prod.secret.exs"
  fi
}
